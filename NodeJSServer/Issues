// DON'T DO THIS
user = User.findOne()

console.log(user.get('firstName'));
will never work! This is because user is a promise object, not a data row from the DB. The right way to do it is:

User.findOne().then(user => {
  console.log(user.get('firstName'));
});

const User = sequelize.define('user', { firstname: Sequelize.STRING });

// Adding a class level method
User.classLevelMethod = function() {
  return 'foo';
};

// Adding an instance level method
User.prototype.instanceLevelMethod = function() {
  return 'bar';
};

/*
var promise1 = new Promise(function(resolve, reject) {
    setTimeout(reject, 5000, 'foo');
  	setTimeout(()=>console.log("Here after 5 seconds"),5000);
});
promise1.then(()=>console.log("Here after the promises")).catch(err=>console.log(err));
console.log(promise1);
// expected output: [object Promise]
console.log("1");
setTimeout(function(){console.log("2");},3000);
console.log("3");
setTimeout(function(){console.log("4");},5000);

//Results:
> [object Promise]
> "1"
> "3"
> "2"
> "foo"
> "Here after 5 seconds"
> "4"
*/
